version: 2.1
commands:
  run_tests:
    parameters:
      glob:
        type: string
      split_by:
        default: filesize
        type: string
      command:
        type: string
    steps:
      - run:
          command: |
            circleci tests glob "<<parameters.glob>>" \
            | circleci tests split --split-by=<<parameters.split_by>> \
            | xargs <<parameters.command>>
jobs:
  build:
    docker:
      - image: membraneframeworklabs/docker_membrane
        environment:
          MIX_ENV: test

    working_directory: ~/app

    steps:
      - checkout
      - restore_cache:
          keys:
            - mix-cache-{{ arch }}-{{ .Branch }}-{{ checksum "mix.lock" }}
            - mix-cache-{{ arch }}-{{ .Branch }}
            - mix-cache-{{ arch }}
      - run: mix deps.get
      - run: mix compile --force --warnings-as-errors
      - save_cache:
          key: mix-cache-{{ arch }}-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: ["deps", "_build"]
      - persist_to_workspace:
          root: .
          paths: "*"

  test:
    docker:
      - image: membraneframeworklabs/docker_membrane
        environment:
          MIX_ENV: test

    working_directory: ~/app
    parallelism: 4

    steps:
      - attach_workspace:
          at: .
      - run_tests:
          glob: "test/membrane/**/*.exs"
          split_by: "timings"
          command: "mix test --include long_running"
      - run_tests:
          glob: "spec/membrane/**/*.exs"
          command: "mix espec"
      - store_test_results:
          path: "_build/test/lib/membrane_core"

  lint:
    docker:
      - image: membraneframeworklabs/docker_membrane
        environment:
          MIX_ENV: dev

    working_directory: ~/app

    steps:
      - attach_workspace:
          at: .
      - run: mix format --check-formatted
      - run: mix credo
      - run: mix docs && mix docs 2>&1 | (! grep -q "warning:")
      - run: asdf current elixir | awk '{print $2}' > .elixir_version
      - restore_cache:
          keys:
            - dialyzer-cache-{{ arch }}-{{ checksum ".elixir_version" }}
      - run: mix dialyzer
      - save_cache:
          key: dialyzer-cache-{{ arch }}-{{ checksum ".elixir_version" }}
          paths: "priv/plts"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires: 
            - build
      - lint:
          requires:
            - build